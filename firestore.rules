
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // Check if the user is an admin by looking up their profile in the 'users' collection.
      // Assumes admins have an `isAdmin: true` field.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAuthenticated() {
      return request.auth != null;
    }

    // Publicly readable collections
    match /blog/{postId} {
      allow read: if true;
      allow write: if isAuthenticated(); // Simplification: any logged-in user can write for now
    }
    match /courses/{courseId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    match /faqs/{faqId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    match /quizSets/{quizSetId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    match /siteBanners/{bannerId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    match /promotionalPosters/{posterId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    
    // User Collections
    match /users/{userId} {
      // Admins can read any user profile. Users can read their own.
      allow read: if isAdmin() || isOwner(userId);
      // Users can only create and write to their own documents.
      allow create, update, delete: if isOwner(userId);
    }
    
    match /trainers/{trainerId} {
      // Admins and any authenticated user can read trainer profiles.
      allow read: if isAuthenticated();
      // Trainers can only create and write to their own documents.
      allow create, update, delete: if isOwner(trainerId);
    }
    
    // Data collections that Admins need read access to for the dashboard
    match /rescheduleRequests/{requestId} {
      allow read: if isAdmin();
      // Users can create requests, admins/trainers can update
      allow create: if isAuthenticated();
      allow update: if isAdmin();
    }
    
    match /feedback/{feedbackId} {
        allow read: if isAdmin();
        allow create: if isAuthenticated();
    }

    match /referrals/{referralId} {
        allow read: if isAdmin();
        allow create, update: if isAuthenticated();
    }
  }
}
