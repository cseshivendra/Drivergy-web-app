
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Public Collections: Allow anyone to read
    match /blog/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /courses/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /faqs/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /quizSets/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /siteBanners/{docId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    match /promotionalPosters/{docId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // User Collections: Secure access
    match /users/{userId} {
      // Allow read access to any authenticated user or an admin
      allow read: if request.auth != null || isAdmin();
      // Allow a user to create their own document (register)
      allow create: if request.auth.uid == userId;
      // Allow a user to update their own document, or an admin to update any document
      allow update: if request.auth.uid == userId || isAdmin();
      // Only let an admin delete a user document
      allow delete: if isAdmin();
    }

    match /trainers/{trainerId} {
      // Allow read access to any authenticated user or an admin
      allow read: if request.auth != null || isAdmin();
       // Allow a user to create their own document (register)
      allow create: if request.auth.uid == trainerId;
      // Allow a user to update their own document, or an admin to update any document
      allow update: if request.auth.uid == trainerId || isAdmin();
      // Only let an admin delete a trainer document
      allow delete: if isAdmin();
    }
    
    match /rescheduleRequests/{requestId} {
        allow read: if request.auth != null || isAdmin();
        allow create: if request.auth != null;
        allow update, delete: if isAdmin();
    }
    
     match /feedback/{feedbackId} {
        allow read: if request.auth != null || isAdmin();
        allow create: if request.auth != null;
        allow update, delete: if isAdmin();
    }

     match /referrals/{referralId} {
        allow read: if request.auth.uid == resource.data.referrerId || isAdmin();
        allow create: if request.auth != null;
        allow update, delete: if isAdmin();
    }
  }
}
