rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the requesting user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Default deny all reads and writes to ensure security
    match /{document=**} {
      allow read, write: if false;
    }

    // USERS AND TRAINERS
    // Allow authenticated users to read any profile (needed for login/dashboard)
    // Allow users to create their own profile, and only update/delete their own
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId);
      allow update, delete: if isOwner(userId);
    }
    match /trainers/{trainerId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(trainerId);
      allow update, delete: if isOwner(trainerId);
    }

    // PUBLIC CONTENT
    // Allow public read access for general content collections
    match /blog/{postId} {
      allow get, list: if true;
    }
    match /courses/{courseId} {
      allow get, list: if true;
    }
    match /faqs/{faqId} {
      allow get, list: if true;
    }
    match /quizSets/{quizSetId} {
      allow get, list: if true;
    }
    match /siteBanners/{bannerId} {
        allow get, list: if true;
    }
     match /promotionalPosters/{posterId} {
        allow get, list: if true;
    }


    // USER-SPECIFIC SUBCOLLECTIONS & ACTIONS
    // Allow authenticated users to manage their own specific data
    match /feedback/{feedbackId} {
      allow create: if isAuthenticated();
    }
    match /rescheduleRequests/{requestId} {
      allow create: if isAuthenticated();
      // Allow update only by the owner or an admin (future-proofing)
      allow update: if isOwner(request.resource.data.userId);
    }
     match /referrals/{referralId} {
       allow read: if isAuthenticated();
       allow create: if isAuthenticated();
     }
  }
}
