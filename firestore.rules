
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      // Check if the user is authenticated and if their admin claim is true
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users can read/write their own profile, Admins can read/write any profile
    match /users/{userId} {
      allow read, update, delete: if isOwner(userId) || isAdmin();
      allow create: if request.auth != null; // Allow any authenticated user to create their own profile
    }

    // Trainers can read/write their own profile, Admins can read/write any profile
    match /trainers/{trainerId} {
      allow read, update, delete: if isOwner(trainerId) || isAdmin();
      allow create: if request.auth != null; // Allow any authenticated user to register as a trainer
    }
    
    // Notifications: Users can read/write their own notifications
    match /notifications/{notificationId} {
        allow read, write: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);
    }
    
    // Feedback: Authenticated users can create feedback. Admins can read all.
    match /feedback/{feedbackId} {
      allow read: if isAdmin();
      allow create: if request.auth != null;
    }

    // Reschedule Requests: Users can create/read their own. Admins can read all. Trainers can read requests for them.
    match /rescheduleRequests/{requestId} {
      allow read: if isAdmin() || isOwner(resource.data.userId) || isOwner(resource.data.trainerId);
      allow create: if request.auth != null;
      allow update: if isAdmin() || isOwner(resource.data.trainerId);
    }

    // Publicly readable collections (or admin-only write)
    match /blog/{postId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /courses/{courseId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /faqs/{faqId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /quizSets/{quizSetId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /siteBanners/{bannerId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /promotionalPosters/{posterId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    match /referrals/{referralId} {
      allow read: if isAdmin() || isOwner(resource.data.referrerId);
      allow write: if request.auth != null;
    }
  }
}
