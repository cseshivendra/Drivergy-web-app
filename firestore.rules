
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.userRole;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Admins can do anything
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    // User profiles can be read by their owner or an admin.
    // New users can create their own profile during registration.
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isSignedIn(); // Allows new user registration
      allow update: if isOwner(userId); // Allow users to update their own profile
    }

    // Trainers can read data of their assigned students.
    // This rule is slightly more complex, but allows for trainers to see who they are training.
    match /users/{studentId} {
      allow read: if isSignedIn() && get(/databases/$(database)/documents/users/$(studentId)).data.assignedTrainerId == request.auth.uid;
    }

    // Public collections are readable by anyone.
    match /blog/{postId} {
      allow read: if true;
    }
    match /courses/{courseId} {
      allow read: if true;
    }
    match /promotionalPosters/{posterId} {
      allow read: if true;
    }
    match /faqs/{faqId} {
      allow read: if true;
    }
    match /quizSets/{setId} {
      allow read: if true;
    }

    // Feedback can be created by any signed-in user.
    match /feedback/{feedbackId} {
      allow create: if isSignedIn();
    }

    // Lesson reschedule requests can be created by any signed-in user.
    match /rescheduleRequests/{requestId} {
      allow create: if isSignedIn();
    }
    
    // Referrals can be read by the referrer.
    match /referrals/{referralId} {
      allow read: if isSignedIn() && resource.data.referrerId == request.auth.uid;
    }

  }
}
