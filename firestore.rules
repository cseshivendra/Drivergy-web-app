rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default allow read for public content, secure writes
    function isAuthenticated() {
      return request.auth != null;
    }

    // Function to check if the user is an admin
    // This assumes the admin's profile in the 'users' collection has an 'isAdmin' flag
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Allow public read on these collections
    match /blog/{docId} {
      allow read: if true;
      allow write: if isAuthenticated(); // Simplified for now
    }
    match /courses/{docId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    match /faqs/{docId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    match /quizSets/{docId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
     match /siteBanners/{docId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    match /promotionalPosters/{docId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // Users and Trainers can be read by any authenticated user (for admin/app logic)
    // But only the user themselves can write to their own document
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
    match /trainers/{trainerId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == trainerId;
    }
    
    // These collections should be readable by admins, and by the relevant users.
    match /feedback/{docId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated();
    }
    match /referrals/{docId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated();
    }
    match /rescheduleRequests/{docId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated();
    }

  }
}
