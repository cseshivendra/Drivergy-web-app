
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /users/{userId} {
      allow read, update, delete: if isOwner(userId) || isAdmin();
      allow create: if request.auth != null;
    }

    match /trainers/{trainerId} {
      allow read, update, delete: if isOwner(trainerId) || isAdmin();
      allow create: if request.auth != null;
    }

    match /notifications/{notificationId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow update(isRead): if request.auth != null && resource.data.userId == request.auth.uid;
      allow create, delete: if false; 
    }

    match /blog/{postId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /courses/{courseId} {
      allow read: if true;
      allow write: if isAdmin();
    }
     match /faqs/{faqId} {
      allow read: if true;
      allow write: if isAdmin();
    }
     match /quizSets/{quizSetId} {
      allow read: if true;
      allow write: if isAdmin();
    }
     match /promotionalPosters/{posterId} {
      allow read: if true;
      allow write: if isAdmin();
    }
     match /siteBanners/{bannerId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /feedback/{feedbackId} {
      allow create: if request.auth.uid != null;
      allow read, update, delete: if isAdmin();
    }

    match /rescheduleRequests/{requestId} {
      allow create: if request.auth.uid != null;
      allow read: if isAdmin() 
        || (resource.data.userId != null && resource.data.userId == request.auth.uid) 
        || (resource.data.trainerId != null && resource.data.trainerId == request.auth.uid);
      allow update, delete: if isAdmin();
    }

    match /referrals/{referralId} {
      allow create: if request.auth.uid != null;
      allow read, update, delete: if isAdmin();
    }
  }
}
