
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow public read for content collections
    match /blog/{postId} {
      allow read: if true;
      allow write: if request.auth != null; // Allow authenticated users to write (for admin)
    }
    match /courses/{courseId} {
      allow read: if true;
      allow write: if request.auth != null; // Allow authenticated users to write (for admin)
    }
    match /quizSets/{quizSetId} {
      allow read: if true;
      allow write: if request.auth != null; // Allow authenticated users to write (for admin)
    }
    match /faqs/{faqId} {
      allow read: if true;
      allow write: if request.auth != null; // Allow authenticated users to write (for admin)
    }
    match /siteBanners/{bannerId} {
      allow read: if true;
      allow write: if request.auth != null; // Allow authenticated users to write (for admin)
    }
    match /promotionalPosters/{posterId} {
      allow read: if true;
      allow write: if request.auth != null; // Allow authenticated users to write (for admin)
    }

    // Allow anyone to create a user profile (for registration)
    // Allow authenticated users to read any profile (for fetching details)
    // Allow users to update/delete only their own profile
    match /users/{userId} {
      allow create: if true;
      allow read: if request.auth != null;
      allow update, delete: if request.auth.uid == userId;
    }

    // Allow anyone to create a trainer profile (for registration)
    // Allow authenticated users to read any profile (for fetching details)
    // Allow trainers to update/delete only their own profile
    match /trainers/{trainerId} {
      allow create: if true;
      allow read: if request.auth != null;
      allow update, delete: if request.auth.uid == trainerId;
    }
    
    // Allow authenticated users to manage their related data
    match /feedback/{feedbackId} {
        allow create: if request.auth != null;
        allow read: if request.auth != null;
    }
    match /rescheduleRequests/{requestId} {
        allow create: if request.auth != null;
        allow read: if request.auth != null;
        allow update: if request.auth != null; // Admin or involved trainer can update
    }
    match /referrals/{referralId} {
        allow read: if request.auth != null;
        allow update: if request.auth != null; // Admin can update
    }
  }
}
