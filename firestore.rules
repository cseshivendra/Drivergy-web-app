rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Allow public read access to blog posts
    match /blog/{document} {
      allow read: if true;
      allow write: if request.auth != null &&
        (resource == null || resource.data.authorId == request.auth.uid);
    }

    // Allow public read access to courses
    match /courses/{document} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Allow public read access to FAQs
    match /faqs/{document} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // User profiles - users can read all profiles but only write their own
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Trainer profiles - authenticated users can read all trainer profiles
    // but trainers can only write their own profile
    match /trainers/{trainerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == trainerId;
      allow create: if request.auth != null && request.auth.uid == trainerId;
    }

    // Admin profiles - only admins can read/write admin data
    match /admins/{adminId} {
      allow read, write: if request.auth != null && request.auth.uid == adminId;
      allow create: if request.auth != null && request.auth.uid == adminId;
    }

    // Bookings - users can only access their own bookings
    match /bookings/{bookingId} {
      allow read, write: if request.auth != null &&
        (resource == null ||
         resource.data.userId == request.auth.uid ||
         resource.data.trainerId == request.auth.uid);
      allow create: if request.auth != null;
    }

    // Reviews - public read, authenticated write
    match /reviews/{reviewId} {
      allow read: if true;
      allow write: if request.auth != null;
      allow create: if request.auth != null;
    }

    // Messages/Notifications - users can only access their own
    match /messages/{messageId} {
      allow read, write: if request.auth != null &&
        (resource == null ||
         resource.data.recipientId == request.auth.uid ||
         resource.data.senderId == request.auth.uid);
      allow create: if request.auth != null;
    }

    // Progress tracking - users can only access their own progress
    match /progress/{progressId} {
      allow read, write: if request.auth != null &&
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null;
    }

    // Lessons - public read for course content, authenticated write
    match /lessons/{lessonId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Test Results - users can only access their own test results
    match /testResults/{resultId} {
      allow read, write: if request.auth != null &&
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null;
    }

    // Payments - users can only access their own payment records
    match /payments/{paymentId} {
      allow read, write: if request.auth != null &&
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null;
    }

    // Analytics - read-only for authenticated users (for dashboards)
    match /analytics/{document} {
      allow read: if request.auth != null;
      allow write: if false; // Analytics should be written server-side only
    }

    // Default deny rule for any unmatched paths
    match /{document=**} {
      allow read, write: if false;
    }
  }
}