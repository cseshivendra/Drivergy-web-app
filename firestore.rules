
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow admins to read/write anything
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Allow users to read/update their own profile data
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
      allow delete: if isAdmin();
    }
    
    // Allow trainers to read/update their own profile data
    match /trainers/{trainerId} {
      allow read, update: if request.auth.uid == trainerId || isAdmin();
      allow create: if request.auth.uid == trainerId;
      allow delete: if isAdmin();
    }

    // Allow logged-in users to read general content
    match /courses/{courseId} {
      allow read: if request.auth != null;
    }
    
    match /quizSets/{quizId} {
        allow read: if request.auth != null;
    }

    // Blog and FAQ are public
    match /blog/{postId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /faqs/{faqId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /siteBanners/{bannerId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    match /promotionalPosters/{posterId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Notifications: A user can only read notifications where the userId field matches their own UID.
    match /notifications/{notificationId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      // Writes should only be done by the server, so deny client writes.
      allow write: if false; 
    }
    
    // Allow admins to manage these collections
    match /rescheduleRequests/{reqId} {
        allow read, write: if isAdmin();
    }
    
    match /feedback/{feedbackId} {
        allow read: if isAdmin();
        allow create: if request.auth != null; // Users can create feedback
    }
    
    match /referrals/{refId} {
        allow read, write: if isAdmin();
    }
  }
}
